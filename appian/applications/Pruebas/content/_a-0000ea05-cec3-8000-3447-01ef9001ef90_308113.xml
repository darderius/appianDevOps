<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000ea05-cec3-8000-3447-01ef9001ef90_308118</versionUuid>
    <rule>
        <name>INSS_TEST_Prueba</name>
        <uuid>_a-0000ea05-cec3-8000-3447-01ef9001ef90_308113</uuid>
        <description>Regla utilizada para evaluar las reglas de TEST</description>
        <parentUuid>_a-0000e668-b124-8000-9bb9-011c48011c48_190019</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>a!localVariables(
  local!storedproc: executestoredprocedure(
    "jdbc/Appian",
    "INSS_ADMR_OBTENERNEGOCIOS",
    {
      { name: "INP_1", value: ri!tipoNegocio },
      { name: "INP_2", value: ri!tipo },
      { name: "INP_3", value: ri!idFormulario }
    }
  ),
  local!negocios: a!flatten(local!storedproc.result),
  local!hayRespuestas: if(
    #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(ri!respuestas),
    false,
    true
  ),
  local!respuestas: a!flatten(
    #"SYSTEM_SYSRULES_forEach"(
      items: ri!respuestas,
      expression: if(
        contains(
          { 4, 16 },
          tointeger(
            property(
              index(
                ri!preguntas,
                wherecontains(
                  touniformstring(fv!item.key),
                  cast(103, ri!preguntas.codigoVariable)
                )
              ),
              "tipoRespuesta"
            )
          )
        ),
        {
          key: fv!item.key,
          value: if(
            search("[", fv!item.value, 1) &lt;&gt; 0,
            #"SYSTEM_SYSRULES_forEach"(
              items: reduce(
                fn!substitute,
                split(extract(fv!item.value, "[", "]"), ","),
                merge({ """", " " }, { "", "" })
              ),
              expression: /*torecord(*/
              /*toxml(tostring(*/
              fv!item/*)),*/
              /*date(2020, 01, 02)*/
              /*)*/
              
            ),
            #"SYSTEM_SYSRULES_forEach"(
              items: fv!item.value,
              expression: text(touniformstring(fv!item), "dd/mm/yyyy")
            )
          ),
          tipo: fv!item.tipo,
          tipoRespuesta: tointeger(
            property(
              index(
                ri!preguntas,
                wherecontains(
                  touniformstring(fv!item.key),
                  cast(103, ri!preguntas.codigoVariable)
                )
              ),
              "tipoRespuesta"
            )
          )
        },
        updatedictionary(
          fv!item,
          {
            tipoRespuesta: tointeger(
              property(
                index(
                  ri!preguntas,
                  wherecontains(
                    touniformstring(fv!item.key),
                    cast(103, ri!preguntas.codigoVariable)
                  )
                ),
                "tipoRespuesta"
              )
            )
          }
        )/*)*/
        
      )
    )
  ),
  local!keysAValidar: #"SYSTEM_SYSRULES_forEach"(
    items: local!negocios,
    expression: regexallmatches(
      tostring(
        "PF([0-9])(?![0-9])|PF([0-9]{2})(?![0-9])|PF([0-9]{3})(?![0-9])"
      ),
      tostring(fv!item.EXPRESION),
      "g"
    )
  ),
  local!keysAValidarUnic: #"SYSTEM_SYSRULES_forEach"(
    items: local!keysAValidar,
    expression: a!localVariables(
      local!keys: property(
        todatasubset(
          arrayToPage: #"SYSTEM_SYSRULES_forEach"(
            items: fv!item,
            expression: { codigoPregunta: fv!item }
          ),
          pagingConfiguration: #"SYSTEM_SYSRULES_pagingInfo"(
            startIndex: 1,
            batchSize: - 1,
            sort: #"SYSTEM_SYSRULES_sortInfo"(field: "codigoPregunta", ascending: false)
          )
        ),
        "data",
        "codigoPregunta",
        {}
      ),
      union(local!keys, local!keys)
    )
  ),
  local!keysFlatten: property(
    todatasubset(
      arrayToPage: #"SYSTEM_SYSRULES_forEach"(
        items: union(
          a!flatten(local!keysAValidarUnic),
          a!flatten(local!keysAValidarUnic)
        ),
        expression: { codigoPregunta: fv!item }
      ),
      pagingConfiguration: #"SYSTEM_SYSRULES_pagingInfo"(
        startIndex: 1,
        batchSize: - 1,
        sort: #"SYSTEM_SYSRULES_sortInfo"(field: "codigoPregunta", ascending: false)
      )
    ),
    "data",
    "codigoPregunta",
    {}
  ),
  local!aValidar: reject(
    fn!isnull,
    #"SYSTEM_SYSRULES_forEach"(
      items: local!keysFlatten,
      expression: a!localVariables(
        local!pregunta: index(
          ri!preguntas,
          wherecontains(
            tostring(fv!item),
            cast(
              103,
              property(ri!preguntas, "codigoVariable", null)
            )
          )
        ),
        if(
          #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(
            wherecontains(
              property(local!pregunta, "codigoVariable", null),
              cast(
                103,
                property(local!respuestas, "key", null)
              )
            )
          ),
          {
            valoresOrg: fv!item,
            valoresSubs: if(
              contains(
                { 4, 16 },
                tointeger(
                  property(local!pregunta, "tipoRespuesta", null)
                )
              ),
              concat(
                "timestamp ",
                "'",
                text("01/01/1500", "yyyy-mm-dd hh:mm:ss"),
                "'"
              ),
              concat("'", 0, "'")
            )
          },
          {
            valoresOrg: fv!item,
            valoresSubs: if(
              contains(
                { 4, 16 },
                tointeger(
                  property(local!pregunta, "tipoRespuesta", null)
                )
              ),
              concat(
                "timestamp ",
                "'",
                text(
                  property(
                    local!respuestas,
                    wherecontains(
                      property(local!pregunta, "codigoVariable", null),
                      cast(
                        103,
                        property(local!respuestas, "key", null)
                      )
                    ),
                    "value",
                    null
                  ),
                  "yyyy-mm-dd hh:mm:ss"
                ),
                "'"
              ),
              concat(
                "'",
                a!localVariables(
                  local!value: cast(
                    103,
                    property(
                      local!respuestas,
                      wherecontains(
                        property(local!pregunta, "codigoVariable", null),
                        cast(
                          103,
                          property(local!respuestas, "key", null)
                        )
                      ),
                      "value",
                      null
                    )
                  ),
                  local!value
                ),
                "'"
              )
            )
          }
        )
      )
    )
  ),
  local!continuar: not(local!hayRespuestas),
  if(
    local!continuar,
    #"SYSTEM_SYSRULES_forEach"(
      items: local!negocios,
      expression: {
        codigo_variable: fv!item.CODIGO_VARIABLE,
        resultado: false
      }
    ),
    a!localVariables(
      local!send: #"SYSTEM_SYSRULES_forEach"(
        items: local!negocios,
        expression: if(
          #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(fv!item.EXPRESION),
          null,
          {
            codigo_variable: fv!item.CODIGO_VARIABLE,
            expresion2: fv!item.EXPRESION,
            expresion: reduce(
              fn!substitute,
              fv!item.EXPRESION,
              merge(
                {
                  index(
                    local!aValidar,
                    wherecontains(
                      cast(
                        103,
                        index(local!keysAValidarUnic, fv!index, null)
                      ),
                      cast(
                        103,
                        property(local!aValidar, "valoresOrg", null)
                      )
                    ),
                    "valoresOrg",
                    null
                  )
                },
                {
                  #"SYSTEM_SYSRULES_forEach"(
                    items: index(
                      local!aValidar,
                      wherecontains(
                        cast(
                          103,
                          index(local!keysAValidarUnic, fv!index, null)
                        ),
                        cast(
                          103,
                          property(local!aValidar, "valoresOrg", null)
                        )
                      ),
                      null
                    ),
                    expression: if(
                      or(
                        search(
                          "[",
                          property(fv!item, "valoresSubs", null),
                          1
                        ),
                        search(
                          "Date out of range",
                          property(fv!item, "valoresSubs", null)
                        ) &lt;&gt; 0
                      ),
                      right(
                        property(fv!item, "valoresOrg", null),
                        len(property(fv!item, "valoresOrg", null)) - 1
                      ),
                      property(fv!item, "valoresSubs", null)
                    )
                  )
                }
              )
            ),
            index: fv!index
          }
        )
      ),
      local!aEliminar: #"SYSTEM_SYSRULES_forEach"(
        items: local!send,
        expression: if(
          #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(fv!item),
          fv!index,
          {}
        )
      ),
      local!hayQueEliminar: #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(local!aEliminar),
      local!send2: if(
        local!hayQueEliminar,
        local!send,
        remove(local!send, local!aEliminar)
      ),
      local!keysAvalidarUnic2: if(
        local!hayQueEliminar,
        local!keysAValidarUnic,
        remove(local!keysAValidarUnic, local!aEliminar)
      ),
      local!sendNumeroAdultos: #"SYSTEM_SYSRULES_forEach"(
        items: local!send2,
        expression: #"_a-0000e7ed-efb7-8000-3434-01ef9001ef90_229698"(
          item: fv!item,
          index: fv!index,
          expresion: property(fv!item, "expresion", null),
          keysAvalidarUnic2: local!keysAvalidarUnic2,
          numeroAdultos: ri!numeroAdultos
        )
      ),
      local!send2Intermedio: if(
        #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(local!sendNumeroAdultos),
        local!send2,
        #"urn:appian:function:v1:a:update"(
          local!send2,
          property(local!sendNumeroAdultos, "index", null),
          local!sendNumeroAdultos
        )
      ),
      local!expresionesConIn: #"SYSTEM_SYSRULES_forEach"(
        items: local!send2Intermedio,
        expression: #"_a-0000e7d4-8b0c-8000-3427-01ef9001ef90_182320"(
          item: fv!item,
          index: fv!index,
          expresion: property(fv!item, "expresion", null),
          keysUnic: a!flatten(local!keysAvalidarUnic2),
          validar: local!aValidar
        )
      ),
      local!send3: if(
        #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(local!expresionesConIn),
        local!send2Intermedio,
        #"urn:appian:function:v1:a:update"(
          local!send2Intermedio,
          property(local!expresionesConIn, "index", null),
          local!expresionesConIn
        )
      ),
      local!expresionesConcat: concat(
        #"SYSTEM_SYSRULES_forEach"(
          items: local!send3.expresion,
          expression: { fv!item, ";" }
        )
      ),
      local!concatSubs: reduce(
        fn!substitute,
        local!expresionesConcat,
        merge(
          { "#(", ")#", "()", "'[", "]'", """" },
          { "'", "'", "", "(", ")", "" }
        )
      ),
      local!spValidacion: executestoredprocedure(
        "jdbc/Appian",
        "INSS_ADMR_EJECUTARREGLA",
        {
          { name: "INP_1", value: local!concatSubs },
          { name: "INP_2", value: ";" }
        }
      ),
      local!spRespuesta: if(
        #"_a-0000e570-a52b-8000-9ba5-011c48011c48_9851"(
          index(
            local!spValidacion,
            "parameters",
            "OUT_1",
            null
          )
        ),
        "0",
        split(
          index(
            local!spValidacion,
            "parameters",
            "OUT_1",
            null
          ),
          ","
        )
      ),
      local!spArmarSalida: #"SYSTEM_SYSRULES_forEach"(
        items: a!flatten(local!spRespuesta),
        expression: if(
          tointeger(fv!item) = 0,
          {
            codigoVariable: index(
              remove(local!negocios, local!aEliminar),
              fv!index,
              "CODIGO_VARIABLE",
              null
            ),
            resultado: false
          },
          {
            codigoVariable: index(
              remove(local!negocios, local!aEliminar),
              fv!index,
              "CODIGO_VARIABLE",
              null
            ),
            resultado: true
          }
        )
      ),
      local!armarSalida: #"SYSTEM_SYSRULES_forEach"(
        items: index(local!negocios, local!aEliminar, {}),
        expression: {
          codigoVariable: fv!item.CODIGO_VARIABLE,
          resultado: false
        }
      ),
      append(local!spArmarSalida, local!armarSalida)
    )
  )
)</definition>
        <namedTypedValue>
            <name>respuestas</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>preguntas</name>
            <type>
                <name>INSS_ADMF_Pregunta?list</name>
                <namespace>urn:com:giss:types:admin</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>tipoNegocio</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>tipo</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <namedTypedValue>
            <name>idFormulario</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>numeroAdultos</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users>
                <userUuid>alberto.saavedrag@inetum.com</userUuid>
            </users>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name>verificaciones manuales</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000e668-b124-8000-9bb9-011c48011c48_213542"(idExpediente: "103202280100034480100").respuestas</a:value>
                    <a:nameRef>respuestas</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000e5cd-0f79-8000-9bab-011c48011c48_73124"(
  idFormulario: 177
)</a:value>
                    <a:nameRef>preguntas</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">3</a:value>
                    <a:nameRef>tipoNegocio</a:nameRef>
                    <a:id>3</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string">Manual</a:value>
                    <a:nameRef>tipo</a:nameRef>
                    <a:id>4</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">2</a:value>
                    <a:nameRef>idFormulario</a:nameRef>
                    <a:id>5</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" xsi:type="xsd:int"/>
                    <a:nameRef>numeroAdultos</a:nameRef>
                    <a:id>6</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
            <el>
                <a:name>verificaciones automaticas</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000e668-b124-8000-9bb9-011c48011c48_213542"(idExpediente: "103202280100034480100").respuestas</a:value>
                    <a:nameRef>respuestas</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">local!preguntas: #"_a-0000e5cd-0f79-8000-9bab-011c48011c48_73124"(
  idFormulario: 162
)</a:value>
                    <a:nameRef>preguntas</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">3</a:value>
                    <a:nameRef>tipoNegocio</a:nameRef>
                    <a:id>3</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string">Automatica</a:value>
                    <a:nameRef>tipo</a:nameRef>
                    <a:id>4</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">2</a:value>
                    <a:nameRef>idFormulario</a:nameRef>
                    <a:id>5</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" xsi:type="xsd:int"/>
                    <a:nameRef>numeroAdultos</a:nameRef>
                    <a:id>6</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
            <el>
                <a:name>monoparentalidad</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{{key: "PF12", value: "2", tipo: "1"}, {key: "PF183", value: "2", tipo: "1"}, {key: "PF164", value: "2", tipo: "1"}, {key: "PF18", value: "3", tipo: "1"}, {key: "PF141", value: "2", tipo: "1"}, {key: "PF122", value: "2", tipo: "1"}, {key: "PF175", value: "2", tipo: "1"}, {key: "PF53", value: "10004341P@test.com", tipo: "1"}, {key: "PF54", value: "666777999", tipo: "1"}, {key: "PF19.1.1", value: "15", tipo: "1"}, {key: "PF19", value: "[ ""13"", ""13"" ]", tipo: "1"}, {key: "PF19.2.2", value: "15", tipo: "1"}, {key: "PF123", value: "2", tipo: "1"}, {key: "PF124", value: "2", tipo: "1"}, {key: "PF125", value: "2", tipo: "1"}, {key: "PF176", value: "1", tipo: "1"}, {key: "PF184.1.1", value: "2", tipo: "1"}, {key: "PF184", value: "2", tipo: "1"}, {key: "PF100.1.1", value: "724", tipo: "1"}, {key: "PF100", value: "[ ""724"", ""724"" ]", tipo: "1"}, {key: "PF184.2.2", value: "1", tipo: "1"}, {key: "PF100.2.2", value: "724", tipo: "1"}, {key: "PF20.1.1", value: "HIJA", tipo: "1"}, {key: "PF20", value: "[ ""HIJA"", ""HIJO"" ]", tipo: "1"}, {key: "PF21.1.1", value: "makhdteapk", tipo: "1"}, {key: "PF21", value: "[ ""makhdteapk"", ""makhdteapk"" ]", tipo: "1"}, {key: "PF22.1.1", value: "TEST", tipo: "1"}, {key: "PF22", value: "[ ""TEST"", ""TEST"" ]", tipo: "1"}, {key: "PF23.1.1", value: "1", tipo: "1"}, {key: "PF23", value: "[ ""1"", ""1"" ]", tipo: "1"}, {key: "PF24.1.1", value: "10002565A", tipo: "1"}, {key: "PF24", value: "[ ""10002565A"", ""10001695F"" ]", tipo: "1"}, {key: "PF25.1.1", value: fn!date(2040, 12, 12), tipo: "1"}, {key: "PF25", value: "[ ""2040-12-12"", """" ]", tipo: "1"}, {key: "PF107.1.1", value: "ABC111000", tipo: "1"}, {key: "PF107", value: "[ ""ABC111000"", ""ABC000111"" ]", tipo: "1"}, {key: "PF26.1.1", value: fn!date(2020, 1, 10), tipo: "1"}, {key: "PF26", value: "[ ""2020-01-10"", ""2021-12-12"" ]", tipo: "1"}, {key: "PF114.1.1", value: "1", tipo: "1"}, {key: "PF114", value: "[ ""1"", ""2"" ]", tipo: "1"}, {key: "PF27.1.0.1.0", value: "13", tipo: "1"}, {key: "PF27.1.1", value: "[ ""13"", ""15"" ]", tipo: "1"}, {key: "PF27", value: "[ ""13"", ""15"", ""13"", ""15"" ]", tipo: "1"}, {key: "PF27.1.2.1.2", value: "15", tipo: "1"}, {key: "PF20.2.2", value: "HIJO", tipo: "1"}, {key: "PF21.2.2", value: "makhdteapk", tipo: "1"}, {key: "PF22.2.2", value: "TEST", tipo: "1"}, {key: "PF23.2.2", value: "1", tipo: "1"}, {key: "PF24.2.2", value: "10001695F", tipo: "1"}, {key: "PF107.2.2", value: "ABC000111", tipo: "1"}, {key: "PF26.2.2", value: fn!date(2021, 12, 12), tipo: "1"}, {key: "PF114.2.2", value: "2", tipo: "1"}, {key: "PF27.2.0.2.0", value: "13", tipo: "1"}, {key: "PF27.2.2", value: "[ ""13"", ""15"" ]", tipo: "1"}, {key: "PF27.2.1.2.1", value: "15", tipo: "1"}, {key: "PF31", value: "1", tipo: "1"}, {key: "PF121", value: "2", tipo: "1"}, {key: "PF38", value: "CL", tipo: "1"}, {key: "PF39", value: "GRAN VIA", tipo: "1"}, {key: "PF40", value: "1", tipo: "1"}, {key: "PF45", value: "724", tipo: "1"}, {key: "PF46", value: "03", tipo: "1"}, {key: "PF47", value: "030020000", tipo: "1"}, {key: "PF48", value: "03001", tipo: "1"}, {key: "PF90", value: "3", tipo: "1"}, {key: "PF56", value: "1", tipo: "1"}, {key: "PF59", value: "1", tipo: "1"}, {key: "PF72", value: "1", tipo: "1"}, {key: "PF180", value: "1", tipo: "1"}, {key: "PF51", value: "1", tipo: "1"}, {key: "PF74", value: "1", tipo: "1"}, {key: "PF113", value: "2", tipo: "1"}, {key: "PF117", value: "2", tipo: "1"}, {key: "PF79", value: "2", tipo: "1"}, {key: "PF83", value: "1", tipo: "1"}, {key: "PF84", value: "1", tipo: "1"}, {key: "PF85", value: "1", tipo: "1"}, {key: "PF111", value: "2", tipo: "1"}, {key: "PF77", value: "1", tipo: "1"}, {key: "PF87", value: "7321031970481434178152", tipo: "1"}, {key: "PF88", value: "1", tipo: "1"}, {key: "PF89", value: "1", tipo: "1"}}</a:value>
                    <a:nameRef>respuestas</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000e5cd-0f79-8000-9bab-011c48011c48_73124"(
  idFormulario: 197
)</a:value>
                    <a:nameRef>preguntas</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">2</a:value>
                    <a:nameRef>tipoNegocio</a:nameRef>
                    <a:id>3</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string"/>
                    <a:nameRef>tipo</a:nameRef>
                    <a:id>4</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">2</a:value>
                    <a:nameRef>idFormulario</a:nameRef>
                    <a:id>5</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:int">3</a:value>
                    <a:nameRef>numeroAdultos</a:nameRef>
                    <a:id>6</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000ea05-cec3-8000-3447-01ef9001ef90_308118"/>
    </history>
</contentHaul>
